---
swagger: "2.0"
info:
  x-ibm-name: "utility"
  title: "Utility"
  version: "1.0.0"
  description: "Utility to Authentication"
schemes:
- "https"
host: "$(catalog.host)"
basePath: "/utility"
consumes:
- "application/json"
produces:
- "application/json"
securityDefinitions: {}
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  assembly:
    execute:
    - switch:
        title: "switch"
        case:
        - condition: "((request.verb==='GET')&&(api.operation.path==='/ping'))"
          execute:
          - gatewayscript:
              title: "gatewayscript"
              version: "1.0.0"
              source: "session.output.write({\"message\":\"hello world!\"});\napim.output(\"\
                application/json\");"
        - condition: "((request.verb==='GET')&&(api.operation.path==='/basic-auth/{username}/{password}'))"
          execute:
          - gatewayscript:
              title: "gatewayscript"
              version: "1.0.0"
              source: "var reqauth = apim.getvariable('request.authorization').split('\
                \ ');\nvar splitval = new Buffer((reqauth[1] || ''), 'base64').toString('utf8').split(':');\n\
                var username = splitval[0] || '';\nvar password = splitval[1] || '';\n\
                apim.console.debug('user credential : [' + username + ':' + password\
                \ + ']');\nif (username === apim.getvariable('request.parameters.username')\
                \ && password === apim.getvariable('request.parameters.password'))\
                \ \n{\n    session.output.write({\"authenticatedUser\": username });\n\
                \    apim.setvariable('message.headers.api-authenticated-credential',\
                \ 'cn=' + username + ',email=' + username + '@poon.com');\n    apim.setvariable('message.status.code',\
                \ 200);\n    apim.output('application/json');\n    \n}\nelse \n{\n\
                \    apim.setvariable('message.status.code', 401);\n    \n}"
        version: "1.0.0"
  phase: "realized"
  categories:
  - "OAUTH/Utility"
paths:
  /ping:
    get:
      responses:
        200:
          description: "200 OK"
  /basic-auth/{username}/{password}:
    get:
      responses:
        200:
          description: "200 OK"
      parameters:
      - $ref: "#/parameters/username"
      - $ref: "#/parameters/password"
      - $ref: "#/parameters/Authorization"
definitions: {}
tags: []
parameters:
  username:
    name: "username"
    type: "string"
    required: true
    in: "path"
  password:
    name: "password"
    type: "string"
    required: true
    in: "path"
  Authorization:
    name: "Authorization"
    type: "string"
    required: false
    in: "header"
security: []
